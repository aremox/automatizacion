# https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/
# https://www.itwonderlab.com/es/cluster-kubernetes-vagrant-ansible/
# https://www.middlewareinventory.com/blog/ansible-update-etc-hosts-file-across-all-hosts/

IMAGE_NAME = "bento/almalinux-8"
K8S_NAME = "ditwl-k8s-01"
TERMINAL_NUM = 1
MASTERS_NUM = 1
MASTERS_CPU = 4 
MASTERS_MEM = 8096
NODES_NUM = 2
NODES_CPU = 2
NODES_MEM = 2048
IP_BASE = "192.168.50."
VAGRANT_DISABLE_VBOXSYMLINKCREATE=1
$ansible = <<-'SCRIPT'
tee /etc/hosts<<EOF
192.168.50.1 terminal
192.168.50.11 k8s-m-1
192.168.50.12 k8s-n-1
192.168.50.13 k8s-n-2
EOF
yum -y update; yum -y install python3; pip3 install --upgrade pip; runuser -l vagrant -c 'pip3 install --user ansible'
mkdir /etc/ansible; chmod -R 777 /etc/ansible
SCRIPT
$update = <<-'SCRIPT'
tee /etc/hosts<<EOF
192.168.50.1 terminal
192.168.50.11 k8s-m-1
192.168.50.12 k8s-n-1
192.168.50.13 k8s-n-2
EOF
yum -y update; yum -y install python3
SCRIPT

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    (1..TERMINAL_NUM).each do |i|
        config.vm.define "terminal-#{i}" do |terminal|
            terminal.vm.box = IMAGE_NAME
            terminal.vm.network "public_network", ip: "192.168.1.129", hostname: true, bridge: "Realtek PCIe 2.5GbE Family Controller"
            terminal.vm.network "private_network", ip: "#{IP_BASE}#{2}"
            terminal.vm.hostname = "terminal"
            terminal.vm.provider "virtualbox" do |v|
                v.memory = NODES_MEM
                v.cpus = NODES_CPU
            end
            terminal.vm.provision "shell", inline: $ansible
            terminal.vm.provision "file", source: "~\\Documents\\Devops\\caso_practico\\Caso_practico_2\\terraform\\Vagrant_docker\\hosts", destination: "/etc/ansible/" 
            terminal.vm.provision "file", source: "~\\Documents\\Devops\\caso_practico\\Caso_practico_2\\terraform\\Vagrant_docker\\ansible.cfg", destination: "/etc/ansible/"
            terminal.vm.provision "file", source: "~\\.vagrant.d\\insecure_private_key", destination: "/home/vagrant/.ssh/id_rsa"   
            terminal.vm.provision "shell", inline: "chmod 500 /home/vagrant/.ssh/id_rsa"
        end
        
    end
    (1..MASTERS_NUM).each do |i|      
        config.vm.define "k8s-m-#{i}" do |master|
            master.vm.box = IMAGE_NAME
            master.vm.network "public_network", ip: "192.168.1.130", hostname: true, bridge: "Realtek PCIe 2.5GbE Family Controller"
            master.vm.network "private_network", ip: "#{IP_BASE}#{i + 10}"
            master.vm.hostname = "k8s-m-#{i}"
            master.vm.provider "virtualbox" do |v|
                v.memory = MASTERS_MEM
                v.cpus = MASTERS_CPU
            end            
            master.vm.provision "shell", inline: $update
        end  
    end
    (1..NODES_NUM).each do |j|
        config.vm.define "k8s-n-#{j}" do |node|
            node.vm.box = IMAGE_NAME
            node.vm.network "private_network", ip: "#{IP_BASE}#{j + 10 + MASTERS_NUM}"
            node.vm.hostname = "k8s-n-#{j}"
            node.vm.provider "virtualbox" do |v|
                v.memory = NODES_MEM
                v.cpus = NODES_CPU
            end             
            node.vm.provision "shell", inline: $update 
        end
    end
end